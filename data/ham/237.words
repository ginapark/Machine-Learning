This
is
clearly
related
to
but
not
the
same
as
the
distinction
being
made
in
other
engineering
disciplines
as
eg
quoted
by
Ray
Moore
in
his
original
posting
Evidently
validation
is
widely
used
to
refer
to
agreement
with
physical
effects
experimental
results
etc
I
do
not
think
we
should
get
too
worried
about
right
usage
of
these
words
seeing
that
there
are
various
communities
out
there
that
use
them
in
subtly
different
ways
2
I
am
perfectly
happy
with
the
name
Reliable
Computing
I
think
Interval
Arithmetic
and
Interval
Computing
are
too
narrow
for
the
reasons
Baker
has
just
given
namely
you
dont
need
intervals
to
get
ermm
validated
results
Example
Years
ago
I
refereed
a
joint
paper
by
two
great
men
Jim
Wilkinson
and
Frank
Olver
on
an
algorithm
and
its
implementation
for
solving
a
dense
linear
system
Axb
with
rigorous
bounds
on
the
error
This
was
in
the
days
when
double
precision
was
far
slower
than
single
and
before
IEEE754
I
think
They
just
used
the
Wilkinson
model
x
OP
y
1
e
x
op
y
e
u
where
op
is
an
exact
arithmetic
operation
OP
is
as
done
on
the
machine
u
is
the
roundoff
unit
I
think
they
even
put
in
an
extra
term
to
handle
underflow
So
the
scheme
was
to
do
the
main
computation
in
double
precision
and
simultaneously
in
single
precision
perform
a
running
rigorous
error
bound
of
each
operation
using
an
inflation
of
each
absolutevalue
bound
by
a
factor
1u1
where
u1
is
the
SP
roundoff
unit
so
as
to
account
for
errors
in
the
SP
computation
You
thus
did
Wilkinsons
backward
error
analysis
but
with
far
sharper
bounds
which
in
theory
would
be
asymptotically
optimal
as
u
0
So
totally
validated
but
with
no
interval
arithmetic
Wilkinson
wrote
me
to
the
effect
that
this
was
Olvers
baby
he
found
it
rather
boring
and
he
could
have
done
it
on
the
pilot
ACE
in
1948
if
he
had
really
wanted
to
He
was
much
more
interested
in
error
analysis
for
giving
insight
rather
than
rigorous
bounds
But
times
and
needs
change
John
Pryce
Dr
John
D
Pryce
Lecturer
in
Mathematical
Software
Engineering
Computer
Information
Systems
Engineering
Dept
Cranfield
University
RMCS
Shrivenham
Swindon
SN6
8LA
UK
Tel
44
01793785683
direct
44
01793785931
secretaries
44
01793785366
fax
This
message
has
been
scanned
for
viruses
and
dangerous
content
by
the
Cranfield
MailScanner
and
is
believed
to
be
clean
