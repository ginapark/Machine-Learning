than
Napster
because
trackers
and
torrents
can
be
stored
on
anyones
server
not
just
napstercom
The
other
problem
with
BT
is
that
is
seems
to
derive
all
of
its
conclusions
by
what
was
already
implemented
instead
of
experimentation
and
mathematics
Bullet
is
slightly
more
general
than
BT
It
allows
streaming
video
and
other
mutable
file
types
to
be
shared
between
peers
The
central
idea
behind
bullet
is
similar
to
that
of
BT
once
a
peer
has
part
of
a
file
it
can
start
transferring
it
to
other
peers
To
achieve
this
Bullet
organizes
itself
into
a
distribution
tree
and
overlays
a
mesh
on
top
The
authors
argue
that
a
distribution
tree
is
not
performant
when
any
nodes
especially
a
node
close
the
root
has
a
slow
connection
or
disconnects
To
alleviate
this
issue
the
overlayed
mesh
connects
peers
that
are
not
directly
connected
in
the
tree
The
examples
the
authors
gives
are
a
root
node
r
and
two
children
a
and
b
If
the
connections
between
all
nodes
is
1mpbs
and
the
root
node
sends
a
the
file
b
can
receive
it
at
2mpbs
instead
of
1
because
it
can
download
from
a
and
from
r
at
the
same
time
as
long
as
the
mesh
has
that
connection
In
their
experiments
Bullet
achieved
on
average
twice
the
bandwidth
per
node
than
a
distribution
tree
It
is
also
less
susceptible
to
random
disconnections
and
low
bandwidth
nodes
The
problem
with
Bullet
seems
to
be
the
small
amount
of
overhead
bandwidth
that
is
used
to
propagate
node
information
that
builds
the
mesh
The
authors
are
quick
to
argue
that
30kpbs
is
not
significant
enough
to
slow
down
the
expected
highbandwidth
connections
that
are
expected
to
use
it
but
streaming
video
is
not
limited
to
high
bandwidth
connections
Currently
most
websites
have
options
of
bandwidth
between
50kpbs
and
250kpbs
to
satisfy
modems
up
to
decent
quality
broadband
connections
This
system
would
be
unworkable
with
video
bitrates
of
50kpbs
or
even
100kpbs
because
a
significant
amount
of
bandwidth
relative
to
the
video
quality
would
be
required
just
as
overhead
SplitStream
is
yet
another
system
once
again
more
general
than
BitTorrent
that
distributes
data
from
a
source
to
a
bunch
of
clientspeers
SplitStream
stripes
data
into
overlapping
segments
the
overlap
is
for
ECCs
Multiple
distribution
trees
are
created
where
each
client
is
a
leaf
in
every
tree
except
one
in
which
it
is
an
interior
node
The
data
that
was
cut
into
pieces
is
then
sent
along
the
trees
and
is
received
by
all
clients
In
this
way
SplitStream
tries
to
achieve
equal
amounts
of
upload
and
download
bandwidth
between
all
peers
There
are
several
problem
with
this
approach
Bandwidth
is
often
nonuniform
and
slower
links
can
slow
down
the
entire
network
The
other
problem
is
the
immense
amount
of
resources
needed
to
construct
many
distribution
trees
In
addition
when
sending
a
larger
file
the
number
of
trees
that
are
needed
goes
up
This
seems
like
a
serious
flaw
especially
in
a
system
with
large
amounts
of
churn
