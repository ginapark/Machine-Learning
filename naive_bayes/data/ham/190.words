Third
it
is
presently
unclear
to
me
what
you
mean
about
generates
a
local
extremum
at
each
critical
point
I
did
not
say
that
but
it
generates
a
local
extremum
at
every
feasible
integer
point
The
precise
statement
underlying
this
remark
is
that
if
you
fix
all
integer
variables
at
some
feasible
integer
values
and
locally
minimize
the
objective
in
the
remaining
variables
the
resulting
point
will
be
a
local
mimimizer
of
the
sineconstrained
program
In
particular
if
all
variables
are
integers
then
any
feasible
point
satisfies
the
first
order
conditions
for
the
sine
version
In
that
case
all
work
done
in
an
interval
Newton
method
is
wasted
What
is
your
objective
Are
you
using
a
penalty
method
No
Constrained
optimization
problems
also
may
have
several
local
minima
One
can
pass
the
sine
version
to
any
global
solver
for
constrained
problems
and
my
remarks
apply
no
matter
what
methods
the
solver
uses
In
each
case
modifying
the
solver
directly
will
gain
efficiency
Essentially
my
remark
boils
down
to
saying
that
the
sinetrick
is
just
a
waste
of
many
transcendental
function
evaluations
sines
and
cosines
in
function
and
gradient
evaluatiosn
arc
sines
in
constraint
propagation
It
buys
nothing
but
the
ability
to
use
black
box
continuous
global
solvers
at
the
expense
of
introducing
inefficiency
at
various
places
overhead
in
function
and
gradient
evaluation
optimality
conditions
and
constraint
propagation
Apart
from
that
it
should
not
have
a
negative
effect
on
the
number
of
boxes
in
the
bb
process
at
least
if
the
global
solver
is
wellwritten
Arnold
Neumaier
When
the
variables
xi
must
be
integers
Hansen
proposes
in
Global
Optimization
Using
Interval
Analysis
pg
214
to
solve
a
constrained
problem
by
adding
constraints
like
sin
pixi0
This
is
a
simple
way
of
posing
the
problem
to
a
package
that
handles
only
continuous
problems
But
it
is
quite
inefficient
since
it
generates
a
local
extremum
at
every
feasible
integer
point
and
thus
makes
the
problem
unnecessarily
difficult
Even
linear
mixed
integer
problems
which
can
generally
be
solved
quite
efficiently
using
branch
and
cut
with
an
LPsolver
will
become
nonlinear
