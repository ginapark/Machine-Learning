To
Emin
Gun
Sirer
egsCSCornellEDU
ContentTransferEncoding
8bit
XMIMEAutoconverted
from
quotedprintable
to
8bit
by
sundialcscornelledu
id
g8OIVDh03086
This
is
the
first
paper
we
have
seen
that
talks
about
a
protocol
that
supports
QoS
requirements
Such
a
protocol
is
essential
when
a
realtime
application
is
being
run
and
the
application
needs
some
minimum
guarantee
of
resources
to
work
A
nice
feature
of
the
paper
is
that
at
the
beginning
it
lists
out
the
goals
of
CEDAR
and
the
goals
of
QoS
routing
The
protocol
does
away
with
broadcasts
altogether
It
achieves
the
desired
results
of
a
broadcast
by
first
building
an
underlying
Core
Node
network
and
then
transmitting
unicast
messages
between
these
Core
nodes
But
this
means
that
when
a
particular
Core
Node
has
a
large
number
of
neighbors
in
the
core
it
has
to
spend
a
long
time
sending
messages
to
these
nodes
one
after
the
other
whereas
in
an
equivalent
setup
where
broadcasts
are
used
a
broadcast
is
achieved
with
just
a
single
message
The
protocol
avoids
redundant
message
transmission
between
Core
nodes
by
caching
the
RTSCTS
packets
that
precede
a
Core
message
The
paper
also
describes
the
concept
of
Fast
Moving
Decrease
Waves
and
Slow
Moving
Increase
Waves
for
state
propagation
This
feature
prevents
the
problems
caused
by
links
coming
up
for
a
short
time
and
then
crashing
Weaknesses
The
period
for
which
the
RTS
and
CTS
pkts
corresponding
to
a
Core
broadcast
are
cached
is
not
specified
During
the
QoS
route
computation
the
protocol
tries
to
build
the
longest
subpaththat
satisfies
the
Bandwidth
requirement
possible
along
the
computed
core
path
This
process
might
miss
out
on
some
possible
routes
and
the
route
computation
could
fail
Eg
Suppose
that
this
stage
builds
a
path
from
Source
S
to
an
intermediate
point
T
but
T
eventually
fails
to
find
a
required
route
to
Dest
D
It
is
possible
that
a
route
with
the
reqd
BW
exists
from
S
to
D
along
some
other
path
The
simulation
has
been
conducted
with
a
maximum
of
only
20
nodes
Also
in
each
set
of
simulations
a
maximum
of
10
endtoend
connections
have
been
run
This
is
not
substantial
enough
to
analyse
the
protocol
When
there
is
a
link
failure
the
protocol
attempts
both
Point
of
Failure
and
Source
reconfigurations
The
Point
of
Failure
reconfiguration
is
wasteful
because
the
intransmit
packets
that
this
reconfig
tries
to
get
to
the
dest
will
in
probability
get
there
after
the
deadlines
of
the
packets
The
application
has
a
bandwidth
requirement
so
the
pkts
have
some
delay
constraints
The
work
can
be
improved
by
running
longer
simulations
over
larger
networks
and
measuring
the
throughput
achieved
Also
comparisons
can
be
made
with
an
optimal
shortestJustEnough
algothat
computes
the
shortest
route
among
all
those
routes
that
have
at
least
as
much
bandwidth
as
reqd
instead
of
with
an
optimal
shortestwidest
algo
